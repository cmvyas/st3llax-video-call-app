{"version":3,"sources":["SocketContext.js","components/videoplayer.jsx","components/notifications.jsx","components/options.jsx","App.js","reportWebVitals.js","index.js"],"names":["SocketContext","createContext","socket","io","ContextProvider","children","useState","callAccepted","setCallAccepted","callEnded","setCallEnded","stream","setStream","name","setName","call","setCall","me","setMe","myVideo","useRef","userVideo","connectionRef","useEffect","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","on","id","from","callerName","signal","isReceivingCall","Provider","value","callUser","peer","Peer","initiator","trickle","data","emit","userToCall","signalData","leaveCall","destroy","window","location","reload","answerCall","to","useStyles","makeStyles","theme","width","breakpoints","down","gridContainer","justifyContent","flexDirection","paper","padding","color","filter","BackgroundColor","Videoplayer","classes","useContext","Grid","container","className","Paper","item","xs","md","Typography","variant","gutterBottom","playsInline","muted","ref","autoPlay","Notifications","style","display","Button","onClick","root","margin","marginTop","Options","idToCall","setIdToCall","Container","elevation","noValidate","autoComplete","TextField","label","onChange","e","target","fullWidth","text","startIcon","Assignment","fontSize","PhoneDisabled","Phone","appBar","alignItems","border","backgroundColor","wrapper","App","AppBar","position","align","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4faea8e3.chunk.js","sourcesContent":["import React, { createContext, useState, useRef, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport Peer from \"simple-peer\";\n\nconst SocketContext = createContext();\n\n// const socket = io('http://localhost:5000');\nconst socket = io(\"https://git.heroku.com/st3llaxvideocall.git\");\n\nconst ContextProvider = ({ children }) => {\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false);\n  const [stream, setStream] = useState();\n  const [name, setName] = useState(\"\");\n  const [call, setCall] = useState({});\n  const [me, setMe] = useState(\"\");\n\n  const myVideo = useRef();\n  const userVideo = useRef();\n  const connectionRef = useRef();\n\n  useEffect(() => {\n    navigator.mediaDevices\n      .getUserMedia({ video: true, audio: true })\n      .then((currentStream) => {\n        setStream(currentStream);\n\n        myVideo.current.srcObject = currentStream;\n      });\n\n    socket.on(\"me\", (id) => setMe(id));\n\n    socket.on(\"callUser\", ({ from, name: callerName, signal }) => {\n      setCall({ isReceivingCall: true, from, name: callerName, signal });\n    });\n  }, []);\n\n  const answerCall = () => {\n    setCallAccepted(true);\n\n    const peer = new Peer({ initiator: false, trickle: false, stream });\n\n    peer.on(\"signal\", (data) => {\n      socket.emit(\"answerCall\", { signal: data, to: call.from });\n    });\n\n    peer.on(\"stream\", (currentStream) => {\n      userVideo.current.srcObject = currentStream;\n    });\n\n    peer.signal(call.signal);\n\n    connectionRef.current = peer;\n  };\n\n  const callUser = (id) => {\n    const peer = new Peer({ initiator: true, trickle: false, stream });\n\n    peer.on(\"signal\", (data) => {\n      socket.emit(\"callUser\", {\n        userToCall: id,\n        signalData: data,\n        from: me,\n        name,\n      });\n    });\n\n    peer.on(\"stream\", (currentStream) => {\n      userVideo.current.srcObject = currentStream;\n    });\n\n    socket.on(\"callAccepted\", (signal) => {\n      setCallAccepted(true);\n\n      peer.signal(signal);\n    });\n\n    connectionRef.current = peer;\n  };\n\n  const leaveCall = () => {\n    setCallEnded(true);\n\n    connectionRef.current.destroy();\n\n    window.location.reload();\n  };\n\n  return (\n    <SocketContext.Provider\n      value={{\n        call,\n        callAccepted,\n        myVideo,\n        userVideo,\n        stream,\n        name,\n        setName,\n        callEnded,\n        me,\n        callUser,\n        leaveCall,\n        answerCall,\n      }}\n    >\n      {children}\n    </SocketContext.Provider>\n  );\n};\n\nexport { ContextProvider, SocketContext };\n","import React, { useContext } from \"react\";\nimport { Grid, Typography, Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { SocketContext } from \"../SocketContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  video: {\n    width: \"550px\",\n\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"300px\",\n    },\n  },\n  gridContainer: {\n    justifyContent: \"center\",\n    [theme.breakpoints.down(\"xs\")]: {\n      flexDirection: \"column\",\n    },\n  },\n  paper: {\n    padding: \"10px\",\n    color: \"#590995\",\n    filter: \"contrast(120%)\",\n    BackgroundColor: \"white\",\n  },\n}));\n\nconst Videoplayer = () => {\n  const classes = useStyles();\n  const { name, callAccepted, myVideo, userVideo, callEnded, stream, call } =\n    useContext(SocketContext);\n\n  return (\n    <Grid container className={classes.gridContainer}>\n      {stream && (\n        <Paper className={classes.paper}>\n          <Grid item xs={12} md={6}>\n            <Typography variant='h5' gutterBottom>\n              {name || \"You\"}\n            </Typography>\n            <video\n              playsInline\n              muted\n              ref={myVideo}\n              autoPlay\n              className={classes.video}\n            />\n          </Grid>\n        </Paper>\n      )}\n      {callAccepted && !callEnded && (\n        <Paper className={classes.paper}>\n          <Grid item xs={12} md={6}>\n            <Typography variant='h5' gutterBottom>\n              {call.name || \"Name\"}\n            </Typography>\n            <video\n              playsInline\n              ref={userVideo}\n              autoPlay\n              className={classes.video}\n            />\n          </Grid>\n        </Paper>\n      )}\n    </Grid>\n  );\n};\n\nexport default Videoplayer;\n","import React, { useContext } from \"react\";\nimport { Button } from \"@material-ui/core\";\n\nimport { SocketContext } from \"../SocketContext\";\n\nconst Notifications = () => {\n  const { answerCall, call, callAccepted } = useContext(SocketContext);\n  return (\n    <>\n      {call.isReceivingCall && !callAccepted && (\n        <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n          <h1>{call.name} is calling...</h1>\n          <Button variant='contained' color='primary' onClick={answerCall}>\n            Answer\n          </Button>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Notifications;\n","import React, { useState, useContext } from \"react\";\nimport {\n  Button,\n  TextField,\n  Grid,\n  Typography,\n  Container,\n  Paper,\n} from \"@material-ui/core\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { Assignment, Phone, PhoneDisabled } from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { SocketContext } from \"../SocketContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  gridContainer: {\n    width: \"100%\",\n    [theme.breakpoints.down(\"xs\")]: {\n      flexDirection: \"column\",\n    },\n  },\n  container: {\n    width: \"600px\",\n    margin: \"35px 0\",\n    padding: 0,\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"80%\",\n    },\n  },\n  margin: {\n    marginTop: 20,\n  },\n  padding: {\n    padding: 20,\n  },\n  paper: {\n    padding: \"10px 20px\",\n  },\n}));\n\nconst Options = ({ children }) => {\n  const { me, callAccepted, name, setName, callEnded, leaveCall, callUser } =\n    useContext(SocketContext);\n  const [idToCall, setIdToCall] = useState(\"\");\n  const classes = useStyles();\n\n  return (\n    <Container className={classes.container}>\n      <Paper elevation={10} className={classes.paper}>\n        <form className={classes.root} noValidate autoComplete='off'>\n          <Grid container className={classes.gridContainer}>\n            <Grid item xs={12} md={6} className={classes.padding}>\n              <Typography gutterBottom variant='h6'>\n                Account Info\n              </Typography>\n              <TextField\n                label='Name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n                fullWidth\n              />\n              <CopyToClipboard text={me} className={classes.margin}>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  fullWidth\n                  startIcon={<Assignment fontSize='large' />}\n                >\n                  Copy Your ID\n                </Button>\n              </CopyToClipboard>\n            </Grid>\n            <Grid item xs={12} md={6} className={classes.padding}>\n              <Typography gutterBottom variant='h6'>\n                Make a call\n              </Typography>\n              <TextField\n                label='ID to call'\n                value={idToCall}\n                onChange={(e) => setIdToCall(e.target.value)}\n                fullWidth\n              />\n              {callAccepted && !callEnded ? (\n                <Button\n                  variant='contained'\n                  color='secondary'\n                  startIcon={<PhoneDisabled fontSize='large' />}\n                  fullWidth\n                  onClick={leaveCall}\n                  className={classes.margin}\n                >\n                  Hang Up\n                </Button>\n              ) : (\n                <Button\n                  variant='contained'\n                  color='primary'\n                  startIcon={<Phone fontSize='large' />}\n                  fullWidth\n                  onClick={() => callUser(idToCall)}\n                  className={classes.margin}\n                >\n                  Call\n                </Button>\n              )}\n            </Grid>\n          </Grid>\n        </form>\n        {children}\n      </Paper>\n    </Container>\n  );\n};\n\nexport default Options;\n","import React from \"react\";\nimport \"./App.css\";\nimport { Typography, AppBar } from \"@material-ui/core\";\nimport Videoplayer from \"./components/videoplayer\";\nimport Notifications from \"./components/notifications\";\nimport Options from \"./components/options\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    margin: \"30px 100px\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"520px\",\n    border: \"transparent\",\n    color: \"#001E6C\",\n    backgroundColor: \"transparent\",\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"80%\",\n    },\n    fontSize: \"100px\",\n  },\n\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.wrapper}>\n      <AppBar className={classes.appBar} position='static'>\n        <Typography align='center'>Call Your Loved One's</Typography>\n      </AppBar>\n      <Videoplayer />\n      <Options>\n        <Notifications />\n      </Options>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ContextProvider } from \"./SocketContext\";\nReactDOM.render(\n  <ContextProvider>\n    <App />\n  </ContextProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}